@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SchoolMealSubscription.Models.Enums
@model IEnumerable<SchoolMealSubscription.Models.Entities.Orders>

@{
    ViewData["Title"] = "Orders Management";
}
<!-- Add these before </head> -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

<!-- Add these before </body> -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<div class="container" style="margin-top:120px;margin-bottom: 200px;">
    <h1>@ViewData["Title"]</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    <div class="table-responsive mt-4">
        <table class="table table-striped table-hover">
            <thead class="table-light">
            <tr>
                <th>Invoice #</th>
                <th>Student Name</th>
                <th>Parent Name</th>
                <th>Date</th>
                <th>Duration</th>
                <th>Amount</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.InvoiceNumber</td>
                    <td>@item.Student?.Name</td>
                    <td>@item.Student?.Parent?.FullName</td>
                    <td>@item.SubscriptionDate.ToString("yyyy/MM/dd")</td>
                    <td>@item.Duration.ToString()</td>
                    <td>@item.Amount?.ToString("C", CultureInfo.CreateSpecificCulture("ar-SA"))</td>
                    <td>
                        <span class="badge bg-@(item.Status == SubscriptionStatus.Paid ? "success" :
                                              item.Status == SubscriptionStatus.Pending ? "warning" : "danger")">
                            @item.Status
                        </span>
                    </td>
                    <td>
                        <button data-id="@item.Id" data-status="@((int)item.Status)" class="btn btn-sm btn-outline-primary edit-status-btn">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Add this at the bottom of your Index.cshtml -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update order status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="statusForm">
                    <input type="hidden" id="orderId" name="id" />
                    <div class="mb-3">
                        <label for="statusSelect" class="form-label">Status</label>
                        <select class="form-select" id="statusSelect" name="status" 
                                asp-items="Html.GetEnumSelectList<SubscriptionStatus>()"></select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveStatusBtn">Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
$(document).ready(function() {
    // Open modal with current status
    $('.edit-status-btn').click(function() {
        var orderId = $(this).data('id');
        var currentStatus = $(this).data('status');
        
        $('#orderId').val(orderId);
        $('#statusSelect').val(currentStatus);
        $('#statusModal').modal('show');
    });

    // Handle save button
    $('#saveStatusBtn').click(function() {
        var formData = {
            id: $('#orderId').val(),
            status: $('#statusSelect').val(),
            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
        };

        $.ajax({
            url: '@Url.Action("UpdateStatus", "AdminOrders")',
            type: 'POST',
            data: formData,
            success: function(response) {
                if(response.success) {
                    // Update the status badge on the page
                    var badge = $(`button[data-id="${formData.id}"]`).closest('tr').find('.badge');
                    badge.text(response.newStatus);

                    badge.removeClass('bg-success bg-warning bg-danger bg-secondary bg-info');
                
                    // Add the correct new class based on status
                    var statusClass = getStatusClass(formData.status);
                    badge.addClass(statusClass);
                
                    // Update the button's data-status attribute
                    $(`button[data-id="${formData.id}"]`).data('status', formData.status);

                    $('#statusModal').modal('hide');
                    toastr.success('Status updated successfully');
                }
            }
        });
    });

    function getStatusClass(status) {
        switch(parseInt(status)) {
            case 1: return 'bg-warning'; // Pending
            case 2: return 'bg-success';  // Active
            case 3: return 'bg-danger';   // Cancelled
            default: return 'badge-info';
        }
    }
   });
</script>
}